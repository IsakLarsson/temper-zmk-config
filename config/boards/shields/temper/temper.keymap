/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define QWERTY 1
#define NUM 2
#define NAV 3
#define FUN 4

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <NUM NAV>;
            then-layer = <FUN>;
        };
    };

    behaviors {
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
        smart_shft: smart_shift {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_SHIFT";
            #binding-cells = <0>;
            bindings = <&sk LSHFT>, <&caps_word>;

            mods = <(MOD_LSFT)>;
        };
        comma_semi: comma_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_SEMI";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;

            mods = <(MOD_LSFT)>;
        };
        dot_colon: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COLON";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;

            mods = <(MOD_LSFT)>;
        };
        qmrk_excl: qmrk_excl {
            compatible = "zmk,behavior-mod-morph";
            label = "QUESTION_EXCLAMATION";
            #binding-cells = <0>;
            bindings = <&kp QMARK>, <&kp EXCL>;

            mods = <(MOD_LSFT)>;
        };
        slh_morph: slh_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH_MORPH";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp BSLH>;

            mods = <(MOD_LSFT)>;
        };
        amps_morph: amps_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "AMPERSAND_MORPH";
            #binding-cells = <0>;
            bindings = <&kp AMPS>, <&kp PIPE>;

            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combotab {
            bindings = <&kp TAB>;
            key-positions = <1 2>;
            layers = <0>;
        };

        comboesc {
            bindings = <&kp ESC>;
            key-positions = <7 8>;
            layers = <0>;
        };

        combo_yabai_lyr {
            bindings = <&sl 5>;
            key-positions = <27 28>;
            layers = <0>;
        };

        combo_maximize_yabai {
            bindings = <&yabai_maximize>;
            key-positions = <27 28>;
            layers = <5>;
        };
    };

    macros {
        yabai_foc_left: yabai_foc_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp H>,
                <&macro_release>,
                <&kp LALT>;

            label = "YABAI_FOC_LEFT";
        };
        yabai_foc_right: yabai_foc_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp L>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "YABAI_FOC_RIGHT";
        };
        yabai_maximize: yabai_maximize {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT &kp LALT>,
                <&macro_tap>,
                <&kp M>,
                <&macro_release>,
                <&kp LSHFT &kp LALT>;

            label = "YABAI_MAXIMIZE";
        };
        yabai_mirror: yabai_mirror {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp Y>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>;

            label = "YABAI_MIRROR";
        };
        yabai_balance: yabai_balance {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp E>,
                <&macro_release>,
                <&kp LSHFT &kp LEFT_ALT>;

            label = "YABAI_BALANCE";
        };
        tmux_window_1: tmux_window_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp N1>;

            label = "TMUX_WINDOW_1";
        };
        tmux_window_2: tmux_window_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp N2>;

            label = "TMUX_WINDOW_2";
        };
        tmux_window_3: tmux_window_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp N3>;

            label = "TMUX_WINDOW_3";
        };
        tmux_window_4: tmux_window_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp N4>;

            label = "TMUX_WINDOW_4";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp F  &kp P      &kp B        &kp J      &kp L      &kp U        &kp Y       &kp APOS
&kp A  &kp R  &kp S  &kp T      &kp G        &kp M      &kp N      &kp E        &kp I       &kp O
&kp Z  &kp X  &kp C  &kp D      &kp V        &kp K      &kp H      &comma_semi  &dot_colon  &kp SLASH
              &sl 2  &kp SPACE  &smart_shft  &kp ENTER  &bspc_del  &sl NAV
            >;
        };

        qwerty_layer {
            bindings = <
&kp Q  &kp W  &kp E   &kp R   &kp T   &kp Y   &kp U   &kp I      &kp O    &kp P
&kp A  &kp S  &kp D   &kp F   &kp G   &kp H   &kp J   &kp K      &kp L    &kp SEMI
&kp Z  &kp X  &kp C   &kp V   &kp B   &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH
              &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        num_layer {
            bindings = <
&kp GRAVE   &kp AT    &kp LBRC  &kp RBRC  &kp PRCNT  &kp STAR     &kp N7      &kp N8  &kp N9  &kp MINUS
&kp CARET   &kp HASH  &kp LPAR  &kp RPAR  &kp DLLR   &kp UNDER    &kp N4      &kp N5  &kp N6  &kp PLUS
&slh_morph  &kp LT    &kp LBKT  &kp RBKT  &kp GT     &amps_morph  &kp N1      &kp N2  &kp N3  &kp EQUAL
                      &trans    &trans    &trans     &kp N0       &kp LSHIFT  &trans
            >;
        };

        nav_layer {
            bindings = <
&kp TAB         &kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &trans  &trans    &kp HOME  &kp END  &trans     &trans
&sk LEFT_SHIFT  &sk LCTRL   &sk LALT      &sk LGUI      &trans  &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT  &kp ESC
&trans          &kp C_PREV  &kp C_PP      &kp C_NEXT    &trans  &trans    &trans    &trans   &trans     &trans
                            &trans        &trans        &trans  &trans    &trans    &trans
            >;
        };

        fun_layer {
            bindings = <
&tog QWERTY   &trans        &trans        &trans        &bootloader   &bootloader  &kp F7  &kp F8  &kp F9  &kp F12
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans       &kp F4  &kp F5  &kp F6  &kp F11
&trans        &trans        &bt BT_CLR    &trans        &trans        &trans       &kp F1  &kp F2  &kp F3  &kp F10
                            &trans        &trans        &trans        &trans       &trans  &trans
            >;
        };

        macro_layer {
            bindings = <
&none  &none  &none  &none  &none  &none            &none  &yabai_balance  &yabai_mirror     &none
&none  &none  &none  &none  &none  &yabai_foc_left  &none  &none           &yabai_foc_right  &none
&none  &none  &none  &none  &none  &none            &none  &none           &none             &none
              &none  &none  &none  &none            &none  &none
            >;
        };
    };
};
